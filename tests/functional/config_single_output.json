{
  "dataset": {
    "loader": {
      "import": "KeySelector",
      "params": {
        "inputs": {
          "input": [
            "x1",
            "x2",
            "x3",
            "x4"
          ]
        },
        "outputs": {
          "softmax": [
            "label"
          ]
        }
      }
    },
    "transformer": {
      "import": "tests.functional.test_single_output.Transformer"
    }
  },
  "model": {
    "network": {
      "import": "barrage.model.sequential_from_config",
      "params": {
        "layers": [
          {
            "import": "Input",
            "params": {
              "shape": "{{input_dim}}",
              "name": "input"
            }
          },
          {
            "import": "Dense",
            "params": {
              "units": 10,
              "activation": "relu"
            }
          },
          {
            "import": "Dense",
            "params": {
              "units": 10,
              "activation": "relu"
            }
          },
          {
            "import": "Dense",
            "params": {
              "units": 10,
              "activation": "relu"
            }
          },
          {
            "import": "Dense",
            "params": {
              "units": 10,
              "activation": "relu"
            }
          },
          {
            "import": "Dense",
            "params": {
              "units": 10,
              "activation": "relu"
            }
          },
          {
            "import": "Dense",
            "params": {
              "units": "{{num_classes}}",
              "name": "softmax",
              "activation": "softmax"
            }
          }
        ]
      }
    },
    "outputs": [
      {
        "name": "softmax",
        "loss": {
          "import": "sparse_categorical_crossentropy"
        },
        "metrics": [
          {
            "import": "accuracy"
          }
        ]
      }
    ]
  },
  "solver": {
    "optimizer": {
      "import": "Adam",
      "learning_rate": 0.01
    },
    "learning_rate_reducer": {
      "monitor": "val_loss",
      "mode": "min",
      "patience": 5,
      "factor": 0.1
    },
    "batch_size": 16,
    "epochs": 10
  },
  "services": {
    "best_checkpoint": {
      "monitor": "val_accuracy",
      "mode": "max"
    },
    "tensorboard": {},
    "train_early_stopping": {
      "monitor": "loss",
      "mode": "min",
      "patience": 10,
      "min_delta": 0.01
    },
    "validation_early_stopping": {
      "monitor": "val_loss",
      "mode": "min",
      "patience": 10,
      "min_delta": 0.01
    }
  }
}
